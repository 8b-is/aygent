# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name 8t.is www.8t.is;
    
    return 301 https://8t.is$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name 8t.is;
    
    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/8t.is/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/8t.is/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/8t.is/chain.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    root /data/source/aygent/8t-is-installer;
    
    # Main route - detects browser vs terminal
    location / {
        # Check if it's a browser request
        if ($http_user_agent ~* "Mozilla|Chrome|Safari|Edge|Opera") {
            rewrite ^ /index.html last;
        }
        
        # Otherwise serve the installer script
        default_type text/plain;
        try_files /index.sh =404;
        
        # Make sure script is executable
        add_header Content-Type "text/plain; charset=utf-8";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # Aliases for install and tree paths
    location ~ ^/(install|tree)$ {
        if ($http_user_agent ~* "Mozilla|Chrome|Safari|Edge|Opera") {
            rewrite ^ /index.html last;
        }
        
        default_type text/plain;
        try_files /index.sh =404;
        add_header Content-Type "text/plain; charset=utf-8";
    }
    
    # Serve the HTML page for browsers
    location /index.html {
        try_files /index.html =404;
        add_header Content-Type "text/html; charset=utf-8";
    }
    
    # Release files
    location /releases/ {
        autoindex off;
        try_files $uri =404;
        
        # Set proper content types for downloads
        location ~ \.tar\.gz$ {
            add_header Content-Type "application/gzip";
            add_header Content-Disposition "attachment";
        }
        
        location ~ \.zip$ {
            add_header Content-Type "application/zip";
            add_header Content-Disposition "attachment";
        }
        
        location ~ \.dxt$ {
            add_header Content-Type "application/octet-stream";
            add_header Content-Disposition "attachment";
        }
        
        location ~ \.sha256$ {
            add_header Content-Type "text/plain";
        }
    }
}